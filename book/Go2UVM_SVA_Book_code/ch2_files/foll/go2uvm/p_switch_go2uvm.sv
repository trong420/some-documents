/********************************************
* VerifWorks Go2UVM App: VW_DVC_Go2UVM
* Automatically generated by VerifWorks's DVC_Go2UVM Riviera Apps 
* Thanks for using VerifWorks products
* Visit http://www.verifworks.com for more 
* Generated on   : 2016-06-04 12:15:03
********************************************/ 



// Generating SystemVerilog interface for module: p_switch
// ---------------------------------------------------------
interface p_switch_if (input logic clk);
  logic  [0:0] reset_n;
  logic  [0:0] done;
  logic  [1:0] lock_enb;
  logic  [0:0] switch_enb;
  logic  [1:0] switch_select;
  // End of interface signals 


  // Start of clocking block definition 
  clocking cb @(posedge clk);
    output reset_n;
    output done;
    output lock_enb;
    output switch_enb;
    output switch_select;
  endclocking : cb
  // End of clocking block definition 

endinterface : p_switch_if
// Automatically generated from VerifWorks's DVCreate-Go2UVM product
// Thanks for using VerifWorks products, see http://www.verifworks.com for more

import uvm_pkg::*;
`include "uvm_macros.svh"
// Import Go2UVM Package
import vw_go2uvm_pkg::*;
// Use the base class provided by the vw_go2uvm_pkg
class p_switch_test extends go2uvm_base_test;
  // Create a handle to the actual interface
  virtual p_switch_if vif;
  task reset;
    `uvm_info (log_id, "Start of reset", UVM_MEDIUM)
   // `uvm_info (log_id, "Fill in your reset logic here ", UVM_MEDIUM)
     this.vif.cb.reset_n <= 1'b0;
     repeat (5) @ (this.vif.cb);
     this.vif.cb.reset_n <= 1'b1;
     repeat (1) @ (this.vif.cb);
    `uvm_info (log_id, "End of reset", UVM_MEDIUM)
  endtask : reset
  task main ();
    `uvm_info (log_id, "Start of main", UVM_MEDIUM)
 //   `uvm_info (log_id, "Fill in your main logic here ", UVM_MEDIUM)
	@(vif.cb);
	  begin
		@(vif.cb);
			this.vif.cb.switch_enb <= 1'b1;
			this.vif.cb.switch_select <= 2'b11;

		@(vif.cb);
			this.vif.cb.switch_select <= 2'b00;

			this.vif.cb.lock_enb <= 1'b1;
			this.vif.cb.done <= 1'b1;

		@(vif.cb);
			this.vif.cb.switch_select <= 2'b00;

		@(vif.cb);
			this.vif.cb.switch_select <= 2'b11;

	end

#300 $finish;
    // this.vif.cb.inp_2 <= 22;
    // repeat (5) @ (this.vif.cb);
    `uvm_info (log_id, "End of main", UVM_MEDIUM)
  endtask : main
endclass : p_switch_test

module p_switch_go2uvm;
  timeunit 1ns;
  timeprecision 1ns;
  parameter VW_CLK_PERIOD = 10;

  // Simple clock generator
  bit clk ;
  always # (VW_CLK_PERIOD/2) clk <= ~clk;

  // Interface instance
  p_switch_if p_switch_if_0 (.*);

  // Connect TB clk to Interface instance clk

  // DUT instance
  p_switch p_switch_0 (.clk(clk),
                .switch_enb(p_switch_if_0.switch_enb),     
                .lock_enb(p_switch_if_0.lock_enb),
                .switch_select(p_switch_if_0.switch_select),
		.reset_n(p_switch_if_0.reset_n)    
		);


  // Using VW_Go2UVM
  p_switch_test p_switch_test_0;
  initial begin : go2uvm_test
    p_switch_test_0 = new ();
    // Connect virtual interface to physical interface
    p_switch_test_0.vif = p_switch_if_0;
    // Kick start standard UVM phasing
    run_test ();
  end : go2uvm_test
endmodule : p_switch_go2uvm

